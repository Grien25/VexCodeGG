{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDrive = motor(PORT1, true);\nmotor RightDrive = motor(PORT2, false);\nmotor Conveyor = motor(PORT3, false);\nmotor Flywheel = motor(PORT4, true);\nmotor Arm = motor(PORT5, false);\nmotor Endgame = motor(PORT6, false);\ntouchled Lighty = touchled(PORT12);\ngyro Spinny = gyro(PORT7);\n\n#pragma endregion VEXcode Generated Robot Configuration\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_GyroTurn_heading_velocity_momentum(double myblockfunction_GyroTurn_heading_velocity_momentum__heading, double myblockfunction_GyroTurn_heading_velocity_momentum__velocity, double myblockfunction_GyroTurn_heading_velocity_momentum__momentum);\n// User defined function\nvoid myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction(double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Distance, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Offset, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Direction);\n// User defined function\nvoid myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction(double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Distance, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Offset, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Direction);\n\nfloat LeftDriveSpeed, RightDriveSpeed, ShootingSpeed;\n\n// User defined function\nvoid myblockfunction_GyroTurn_heading_velocity_momentum(double myblockfunction_GyroTurn_heading_velocity_momentum__heading, double myblockfunction_GyroTurn_heading_velocity_momentum__velocity, double myblockfunction_GyroTurn_heading_velocity_momentum__momentum) {\n  if (myblockfunction_GyroTurn_heading_velocity_momentum__heading > Spinny.rotation()) {\n    while ((myblockfunction_GyroTurn_heading_velocity_momentum__heading - myblockfunction_GyroTurn_heading_velocity_momentum__momentum > Spinny.rotation())) {\n      LeftDrive.setVelocity(myblockfunction_GyroTurn_heading_velocity_momentum__velocity, percent);\n      RightDrive.setVelocity(myblockfunction_GyroTurn_heading_velocity_momentum__velocity, percent);\n      LeftDrive.spin(reverse);\n      RightDrive.spin(forward);\n    wait(20, msec);\n    }\n  }\n  else {\n    while ((myblockfunction_GyroTurn_heading_velocity_momentum__heading + myblockfunction_GyroTurn_heading_velocity_momentum__momentum < Spinny.rotation())) {\n      LeftDrive.setVelocity(myblockfunction_GyroTurn_heading_velocity_momentum__velocity, percent);\n      RightDrive.setVelocity(myblockfunction_GyroTurn_heading_velocity_momentum__velocity, percent);\n      LeftDrive.spin(forward);\n      RightDrive.spin(reverse);\n    wait(20, msec);\n    }\n  }\n  LeftDrive.stop();\n  RightDrive.stop();\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n}\n\n// User defined function\nvoid myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction(double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Distance, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Offset, double myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Direction) {\n  if (myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Direction == 1.0) {\n    LeftDrive.setVelocity((myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity - myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Offset), percent);\n    RightDrive.setVelocity(myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity, percent);\n  }\n  else {\n    LeftDrive.setVelocity(myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity, percent);\n    RightDrive.setVelocity((myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Velocity - myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Offset), percent);\n  }\n  LeftDrive.spin(forward);\n  RightDrive.spin(forward);\n  wait(myblockfunction_Arc_Forward_Distance_Velocity_Offset_Direction__Distance, seconds);\n  LeftDrive.stop();\n  RightDrive.stop();\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n}\n\n// User defined function\nvoid myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction(double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Distance, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Offset, double myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Direction) {\n  if (myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Direction == 1.0) {\n    LeftDrive.setVelocity(myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity, percent);\n    RightDrive.setVelocity((myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity - myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Offset), percent);\n  }\n  else {\n    LeftDrive.setVelocity((myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity - myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Offset), percent);\n    RightDrive.setVelocity(myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Velocity, percent);\n  }\n  LeftDrive.spin(reverse);\n  RightDrive.spin(reverse);\n  wait(myblockfunction_Arc_Backward_Distance_Velocity_Offset_Direction__Distance, seconds);\n  LeftDrive.stop();\n  RightDrive.stop();\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Spinny.calibrate(calNormal);\n  Spinny.setRotation(0.0, degrees);\n  LeftDriveSpeed = 60.0;\n  RightDriveSpeed = 60.0;\n  ShootingSpeed = 55.0;\n  LeftDrive.setStopping(brake);\n  RightDrive.setStopping(brake);\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n  Conveyor.setVelocity(60.0, percent);\n  Flywheel.setVelocity(ShootingSpeed, percent);\n  Arm.setMaxTorque(100.0, percent);\n  Arm.setVelocity(75.0, percent);\n  LeftDrive.setPosition(0.0, degrees);\n  Endgame.setVelocity(100.0, percent);\n  Endgame.setStopping(coast);\n  return 0;\n}\n\n// \"when Lighty pressed\" hat block\nvoid onevent_Lighty_pressed_0() {\n  wait(0.1, seconds);\n  LeftDrive.spinFor(forward, 420.0, degrees, false);\n  RightDrive.spinFor(forward, 420.0, degrees, true);\n  wait(0.2, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(35.0, 40.0, 20.0);\n  wait(0.2, seconds);\n  Flywheel.setVelocity(100.0, percent);\n  Flywheel.spin(forward);\n  Conveyor.setVelocity(30.0, percent);\n  Conveyor.spin(reverse);\n  LeftDrive.spinFor(forward, 84.0, degrees, false);\n  RightDrive.spinFor(forward, 84.0, degrees, true);\n  wait(0.2, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(96.0, 30.0, 20.0);\n  wait(0.2, seconds);\n  LeftDrive.setVelocity(45.0, percent);\n  RightDrive.setVelocity(45.0, percent);\n  LeftDrive.spinFor(forward, 230.0, degrees, false);\n  RightDrive.spinFor(forward, 230.0, degrees, true);\n  wait(0.5, seconds);\n  LeftDrive.setVelocity(10.0, percent);\n  RightDrive.setVelocity(10.0, percent);\n  LeftDrive.spinFor(forward, 33.0, degrees, false);\n  RightDrive.spinFor(forward, 33.0, degrees, false);\n  wait(1.5, seconds);\n  Conveyor.stop();\n  Flywheel.stop();\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n  wait(0.2, seconds);\n  LeftDrive.spinFor(reverse, 110.0, degrees, false);\n  RightDrive.spinFor(forward, 110.0, degrees, false);\n  wait(1.0, seconds);\n  LeftDrive.setVelocity(50.0, percent);\n  RightDrive.setVelocity(50.0, percent);\n  LeftDrive.spinFor(reverse, 100.0, degrees, false);\n  RightDrive.spinFor(reverse, 100.0, degrees, true);\n  wait(0.5, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(0.0, 30.0, 15.0);\n  wait(0.2, seconds);\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n  Arm.spinToPosition(-180.0, degrees, false);\n  LeftDrive.spin(reverse);\n  RightDrive.spin(reverse);\n  wait(1.0, seconds);\n  LeftDrive.stop();\n  RightDrive.stop();\n  wait(0.1, seconds);\n  Arm.spin(forward);\n  LeftDrive.setVelocity(20.0, percent);\n  RightDrive.setVelocity(20.0, percent);\n  LeftDrive.spinFor(forward, 40.0, degrees, false);\n  RightDrive.spinFor(forward, 40.0, degrees, false);\n  wait(1.5, seconds);\n  Arm.stop();\n  wait(0.1, seconds);\n  LeftDrive.spinFor(forward, 90.0, degrees, false);\n  RightDrive.spinFor(forward, 90.0, degrees, true);\n  wait(0.1, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-40.0, 40.0, 20.0);\n  wait(0.1, seconds);\n  LeftDrive.spinFor(forward, 155.0, degrees, false);\n  RightDrive.spinFor(forward, 155.0, degrees, true);\n  Flywheel.setVelocity(ShootingSpeed, percent);\n  Conveyor.setVelocity(60.0, percent);\n  Flywheel.spin(forward);\n  Arm.spinToPosition(-180.0, degrees, true);\n  wait(0.1, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(1.0, 40.0, 20.0);\n  wait(0.1, seconds);\n  LeftDrive.spinFor(forward, 270.0, degrees, false);\n  RightDrive.spinFor(forward, 270.0, degrees, false);\n  wait(0.5, seconds);\n  Conveyor.spin(forward);\n  Spinny.setRotation(0.0, degrees);\n  wait(3.0, seconds);\n  Conveyor.spin(reverse);\n  wait(0.5, seconds);\n  Conveyor.spin(forward);\n  wait(3.0, seconds);\n  LeftDrive.spinFor(reverse, 40.0, degrees, false);\n  RightDrive.spinFor(reverse, 40.0, degrees, true);\n  wait(0.2, seconds);\n  Conveyor.setVelocity(30.0, percent);\n  Conveyor.spin(reverse);\n  wait(0.3, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-85.0, 30.0, 20.0);\n  wait(0.3, seconds);\n  LeftDrive.spinFor(forward, 300.0, degrees, false);\n  RightDrive.spinFor(forward, 300.0, degrees, true);\n  wait(0.3, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-110.0, 50.0, 20.0);\n  wait(0.3, seconds);\n  LeftDrive.spinFor(forward, 290.0, degrees, false);\n  RightDrive.spinFor(forward, 290.0, degrees, true);\n  wait(0.3, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-130.0, 50.0, 20.0);\n  LeftDrive.spinFor(forward, 75.0, degrees, false);\n  RightDrive.spinFor(forward, 75.0, degrees, true);\n  wait(0.3, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(0.0, 40.0, 20.0);\n  wait(0.2, seconds);\n  Arm.spinToPosition(-180.0, degrees, false);\n  LeftDrive.spin(reverse);\n  RightDrive.spin(reverse);\n  wait(1.5, seconds);\n  LeftDrive.stop();\n  RightDrive.stop();\n  wait(0.1, seconds);\n  Arm.spin(forward);\n  LeftDrive.setVelocity(20.0, percent);\n  RightDrive.setVelocity(20.0, percent);\n  LeftDrive.spinFor(forward, 40.0, degrees, false);\n  RightDrive.spinFor(forward, 40.0, degrees, false);\n  wait(1.5, seconds);\n  Arm.stop();\n  wait(0.1, seconds);\n  LeftDrive.spinFor(forward, 115.0, degrees, false);\n  RightDrive.spinFor(forward, 115.0, degrees, true);\n  wait(0.2, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-90.0, 40.0, 20.0);\n  wait(0.3, seconds);\n  Flywheel.setVelocity(100.0, percent);\n  Flywheel.spin(forward);\n  LeftDrive.spinFor(forward, 100.0, degrees, false);\n  RightDrive.spinFor(forward, 100.0, degrees, false);\n  wait(0.7, seconds);\n  LeftDrive.setVelocity(20.0, percent);\n  RightDrive.setVelocity(20.0, percent);\n  LeftDrive.spinFor(forward, 33.0, degrees, false);\n  RightDrive.spinFor(forward, 33.0, degrees, false);\n  wait(2.0, seconds);\n  Flywheel.setVelocity(ShootingSpeed, percent);\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n  LeftDrive.spinFor(reverse, 210.0, degrees, false);\n  RightDrive.spinFor(reverse, 210.0, degrees, true);\n  wait(0.1, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(19.0, 40.0, 20.0);\n  wait(0.3, seconds);\n  LeftDrive.setVelocity(50.0, percent);\n  RightDrive.setVelocity(50.0, percent);\n  LeftDrive.spinFor(forward, 315.0, degrees, false);\n  RightDrive.spinFor(forward, 315.0, degrees, false);\n  wait(1.2, seconds);\n  Arm.spinToPosition(-180.0, degrees, false);\n  Conveyor.setVelocity(60.0, percent);\n  Conveyor.spin(forward);\n  Spinny.setRotation(0.0, degrees);\n  wait(3.0, seconds);\n  Conveyor.spin(reverse);\n  wait(0.5, seconds);\n  Conveyor.spin(forward);\n  wait(3.0, seconds);\n  Conveyor.stop();\n  LeftDrive.setVelocity(LeftDriveSpeed, percent);\n  RightDrive.setVelocity(RightDriveSpeed, percent);\n  Arm.spinToPosition(0.0, degrees, false);\n  LeftDrive.spinFor(reverse, 90.0, degrees, false);\n  RightDrive.spinFor(reverse, 90.0, degrees, true);\n  wait(0.2, seconds);\n  Flywheel.stop();\n  myblockfunction_GyroTurn_heading_velocity_momentum(-93.0, 30.0, 20.0);\n  wait(0.2, seconds);\n  LeftDrive.spinFor(forward, 280.0, degrees, false);\n  RightDrive.spinFor(forward, 280.0, degrees, true);\n  wait(0.2, seconds);\n  myblockfunction_GyroTurn_heading_velocity_momentum(-20.0, 30.0, 20.0);\n  wait(0.2, seconds);\n  LeftDrive.spinFor(forward, 180.0, degrees, false);\n  RightDrive.spinFor(forward, 180.0, degrees, false);\n  wait(1.0, seconds);\n  Endgame.spinFor(forward, 540.0, degrees, false);\n}\n\n// \"when buttonCheck pressed\" hat block\nvoid onevent_buttonCheck_pressed_0() {\n}\n\n\nint main() {\n  // register event handlers\n  Lighty.pressed(onevent_Lighty_pressed_0);\n  Brain.buttonCheck.pressed(onevent_buttonCheck_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","textLanguage":"cpp","rconfig":[{"port":[1],"name":"LeftDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[2],"name":"RightDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3],"name":"Conveyor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"Flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"Arm","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"Endgame","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[12],"name":"Lighty","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[7],"name":"Spinny","customName":true,"deviceType":"Gyro","deviceClass":"gyro","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"target":"Physical"}