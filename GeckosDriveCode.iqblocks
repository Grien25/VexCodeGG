{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"oY-I_)g4~FW}E-L2GqHD\">intake</variable><variable id=\"=F1O@gwpBzJqn@vL%a~~\">ArmUp</variable><variable id=\"7R.(.2l7NVYHLhGz;M(j\">ArmRegular</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"-70\"><next><block type=\"iq_sensing_inertial_calibrate\" id=\"xo-cLaMH$ec(K/:#uAH}\"><field name=\"INERTIAL\">BrainInertial</field><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"DTA_16-$l~JyS:_l-5KR\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"vtYI1e[Sry-{*swI2BYY\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"iq_drivetrain_set_turn_velocity\" id=\":|Jty(cA%vh]FPXGLB15\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"5WBqw`KiUT_{i($|fY^8\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"oUXTZMfIkV9~BLGD@}0V\"><field name=\"MOTOR\">Arm</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"c;0p?Fv%!G|Gt6w$zv{B\"><field name=\"NUM\">65</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"I,qp=`F$Akk0ErJX?=1Y\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"R~eOb-|Kk9G~E|Op{(Mp\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"iq_looks_set_touchled_brightness\" id=\"QgDT.baAC3+fy~--YC+h\"><field name=\"TOUCHLED\">TouchLED</field><value name=\"VALUE\"><shadow type=\"math_whole_number\" id=\"]0/(IAn*!VUP-B{XR*t.\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"iq_looks_set_touchled_brightness\" id=\"[PvSATw5:MQ_{u]sDW?g\"><field name=\"TOUCHLED\">TouchLED</field><value name=\"VALUE\"><shadow type=\"math_whole_number\" id=\"|Fu`D2b;E^v(Cd;kv=c$\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"lmt7fKF*%[%t^L@z*lk@\"><field name=\"TOUCHLED\">TouchLED</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"lPkZv._(Xt8Z^6LX+?RD\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"J87=*I;xKOE.[RqQR7r)\"><field name=\"TOUCHLED\">TouchLED8</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"RpM^`SIEBs@fnO(i78Un\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"BR$fUpjo:T1mn)ok[0EC\"><field name=\"VARIABLE\" id=\"7R.(.2l7NVYHLhGz;M(j\">ArmRegular</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"}?%E=s94M~_PV{Op6yP^\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"G|t9CZwTRB];m$ewMyR2\" x=\"470\" y=\"-50\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_control_if_then_else\" id=\"vngLeh|z4e`sJ7efGb-q\"><value name=\"CONDITION\"><block type=\"iq_operator_equal_to\" id=\"3~0]M6hc;DQwscy^s$+|\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"|YZL{+,kzk`puWtK.Mjy\"><field name=\"NUM\"></field></shadow><block type=\"iq_variables_variable\" id=\"F6M6G7%wfB,-)Rt?p;lQ\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"]q!CU0Sem|+XWY!KhOT=\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_spin\" id=\"rf##z+.6SlZY~BemK*94\"><field name=\"MOTOR\">Intake</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_variables_set_variable\" id=\"8z?@C#W|/dQRT`;s:nOu\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"=6s@s}P[;=kC3Zy(Z/2M\"><field name=\"NUM\">0</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_control_if_then\" id=\"KG6klgP{_5lG{=Aa^aWW\"><value name=\"CONDITION\"><block type=\"iq_operator_equal_to\" id=\"QuJ7D+A$L0?@0QZ7G5m@\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"e+R_n1hRX`i*k!^Y8KPI\"><field name=\"NUM\"></field></shadow><block type=\"iq_variables_variable\" id=\"+c5;#GKFlSF#:ouR.d6W\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"z)6*go!@i^BV;_f.r31R\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_set_motor_stopping\" id=\"ANX:(10!6nTw*#o4}1/0\"><field name=\"MOTOR\">Intake</field><field name=\"MODE\">hold</field><next><block type=\"iq_variables_set_variable\" id=\"1L3Brg;3~SQ10_*/;,5q\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"VtX*/||wN-!W;b`D6}w)\"><field name=\"NUM\">1</field></shadow></value></block></next></block></statement></block></statement></block></next></block><block type=\"iq_events_when_controller_button\" id=\"+0VV0fo:]z5bPpmw+Y8%\" x=\"910\" y=\"250\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_variable\" id=\"JFgdKy5-Q4^R}dHjb_-a\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\",aZ#yTB@=CVh[Exn37W{\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"}y~pb+@PCOnR=?/wquPx\"><field name=\"MOTOR\">Intake</field><next><block type=\"iq_control_if_then_else\" id=\"VrRao?f]+d=VKVP`~o?X\"><value name=\"CONDITION\"><block type=\"iq_operator_equal_to\" id=\"*_C6v0F+[xCS;He.Wrkw\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"n8--$bg!~Yb?-T%4Y1bB\"><field name=\"NUM\"></field></shadow><block type=\"iq_variables_variable\" id=\"jw-o1V027MX(s!02?m7G\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"DY-]8}X9:Bewz{LF.eFh\"><field name=\"NUM\">2</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_spin\" id=\"e?L-5a,!$S}Nz{r{pzd@\"><field name=\"MOTOR\">Intake</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_variables_set_variable\" id=\"L|AS(T4zmyS^*]kORf(R\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"|^DsJ*]o3a.yLs)0{o4B\"><field name=\"NUM\">1</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_control_if_then\" id=\"K.^73tTOGPHuI(cmv,9Z\"><value name=\"CONDITION\"><block type=\"iq_operator_equal_to\" id=\"I#+`}Ck3-yfU:yqfPrNc\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"l=$;1PgLt7r9DL`SEX3P\"><field name=\"NUM\"></field></shadow><block type=\"iq_variables_variable\" id=\"opicAYJC4q?aWXhGiS(T\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"6QH1Tc7Kcx,eg`XMi8[a\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_set_motor_stopping\" id=\"Py!!hA-D3:qP2o.xTr?v\"><field name=\"MOTOR\">Intake</field><field name=\"MODE\">hold</field><next><block type=\"iq_variables_set_variable\" id=\"3kPxCd$XFxbb8[Q(0im}\"><field name=\"VARIABLE\" id=\"oY-I_)g4~FW}E-L2GqHD\">intake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"#|cE$(w~HelB?_,N4g#7\"><field name=\"NUM\">2</field></shadow></value></block></next></block></statement></block></statement></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"kwX=o6mAk^8-;_A4JACH\" x=\"770\" y=\"870\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"KAiwK9zM}G_d}C]vG=0O\"><field name=\"MOTOR\">Arm</field><field name=\"MODE\">hold</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"wHW%O/u#ReKbX1PU-a,r\" x=\"230\" y=\"930\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_position\" id=\"mn/#mg6?FI7~E`tRyxxX\"><field name=\"MOTOR\">Arm</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"nqde{9E.iJ2~L,)LUy;h\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"cz9sww8!u)hhD,zn2;8u\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"Lu[8PnAz/KTc~bFe,Nur\"><field name=\"TEXT\">Arm position set</field></shadow></value><next><block type=\"iq_control_wait\" id=\"ASC6n)5,VarTvv;[@4}[\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"iE(LSt5YLS*N-^Ky5mQG\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"#,Eo`f@QXr]ZmHuTM8~]\"><field name=\"TARGET\">Brain</field></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"!#NAk}j43a[R?l=YYw{p\" x=\"770\" y=\"990\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"m_v(_ynJ1zE%!)8$/-Z2\"><field name=\"MOTOR\">Arm</field><field name=\"MODE\">hold</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"nhhE%@gw3^~XZG9j5JBX\" x=\"1110\" y=\"1130\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"DJ!N?Fsd~qo:wi3iv(:{\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">fwd</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"B%jZe2CNJa=N#I8bMv.R\" x=\"410\" y=\"1190\"><field name=\"BUTTON\">ButtonFUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_looks_set_touchled_color\" id=\"x?}EK/]Uwo{4]?KoGu~S\"><field name=\"TOUCHLED\">TouchLED</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"JMm-OP.Mk%gEI{xgv;=n\"><field name=\"COLOR\">purple</field></shadow></value><next><block type=\"iq_looks_set_touchled_brightness\" id=\"]}p7qDYlV1f5ixp9qGS0\"><field name=\"TOUCHLED\">TouchLED</field><value name=\"VALUE\"><shadow type=\"math_whole_number\" id=\"^/0-_F[98!R~KT/8cpj}\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"iq_control_if_then\" id=\"!r.`mFn|CkSEz`Y1ftqI\"><value name=\"CONDITION\"><block type=\"iq_operator_greater_than\" id=\"+!`xc#sH{Byxazyslm1b\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"+NQ4^W/F7_4vMPW0fLhQ\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_position_of_motor\" id=\"O.iyvsg+~Don~,p9QL)M\"><field name=\"MOTOR\">Arm</field><field name=\"UNITS\">deg</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"PQ$VDvXQwq4[~YEgGHsu\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_spin_to_position\" id=\"!w7RHR6[Tlyjt,zhYNnK\"><field name=\"MOTOR\">Arm</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"6c).e`,42P;s/%UIsee@\"><field name=\"NUM\">0</field></shadow></value></block></statement><next><block type=\"iq_motion_spin\" id=\"ubhU{V}X];9#AOyF[$Fj\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_wait\" id=\"@lK1XNFvTk;8Pv-S#=46\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"_`N;BFh02Ag%_UIaTOfS\"><field name=\"NUM\">0.3</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"q+.NJzO,fK|G5{PNNY}v\"><field name=\"MOTOR\">Arm</field><next><block type=\"iq_motion_set_motor_position\" id=\"heVR+C`XA!qRsg?!Y:E3\"><field name=\"MOTOR\">Arm</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"E%1[0OTZf9CS[%HDzD,R\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"nvM|Zwu?0whjBPDO{F|f\" x=\"990\" y=\"1410\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"T|S@o(pWW!fgm4`xs?^J\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">rev</field></block></next></block></xml>","rconfig":[{"port":[3,4,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"rev","gyroType":"integrated","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[1,6],"name":"Arm","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"Arm","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"split"},"triportSourcePort":22},{"port":[2],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"TouchLED","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[8],"name":"TouchLED8","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT3, 1, true);\nmotor RightDriveSmart = motor(PORT4, 1, false);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\nmotor ArmMotorA = motor(PORT1, false);\nmotor ArmMotorB = motor(PORT6, true);\nmotor_group Arm = motor_group(ArmMotorA, ArmMotorB);\n\ncontroller Controller = controller();\nmotor Intake = motor(PORT2, false);\ntouchled TouchLED = touchled(PORT5);\ntouchled TouchLED8 = touchled(PORT8);\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA + AxisC\n      // right = AxisA - AxisC\n      int drivetrainLeftSideSpeed = Controller.AxisA.position() + Controller.AxisC.position();\n      int drivetrainRightSideSpeed = Controller.AxisA.position() - Controller.AxisC.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonRUp/ButtonRDown status to control Arm\n      if (Controller.ButtonRUp.pressing()) {\n        Arm.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        Arm.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        Arm.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, intake, ArmUp, ArmRegular;\n\n// \"when started\" hat block\nint whenStarted1() {\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) { task::sleep(50); }\n  Drivetrain.setDriveVelocity(60.0, percent);\n  Drivetrain.setTurnVelocity(40.0, percent);\n  Arm.setVelocity(65.0, percent);\n  Intake.setVelocity(80.0, percent);\n  TouchLED.setBrightness(75);\n  TouchLED.setBrightness(75);\n  TouchLED.setColor(green);\n  TouchLED8.setColor(green);\n  ArmRegular = 0.0;\n  return 0;\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  if (intake == 1.0) {\n    Intake.spin(forward);\n    intake = 0.0;\n  }\n  else {\n    if (intake == 0.0) {\n      Intake.setStopping(hold);\n      intake = 1.0;\n    }\n  }\n}\n\n// \"when Controller ButtonLDown pressed\" hat block\nvoid onevent_ControllerButtonLDown_pressed_0() {\n  intake = 2.0;\n  Intake.stop();\n  if (intake == 2.0) {\n    Intake.spin(reverse);\n    intake = 1.0;\n  }\n  else {\n    if (intake == 1.0) {\n      Intake.setStopping(hold);\n      intake = 2.0;\n    }\n  }\n}\n\n// \"when Controller ButtonRUp released\" hat block\nvoid onevent_ControllerButtonRUp_released_0() {\n  Arm.setStopping(hold);\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  Arm.setPosition(0.0, degrees);\n  Brain.Screen.print(\"Arm position set\");\n  wait(2.0, seconds);\n  Brain.Screen.clearScreen();\n}\n\n// \"when Controller ButtonRDown released\" hat block\nvoid onevent_ControllerButtonRDown_released_0() {\n  Arm.setStopping(hold);\n}\n\n// \"when Controller ButtonRUp pressed\" hat block\nvoid onevent_ControllerButtonRUp_pressed_0() {\n  Arm.spin(forward);\n}\n\n// \"when Controller ButtonFUp pressed\" hat block\nvoid onevent_ControllerButtonFUp_pressed_0() {\n  TouchLED.setColor(purple);\n  TouchLED.setBrightness(90);\n  if (Arm.position(degrees) > 0.0) {\n    Arm.spinToPosition(0.0, degrees, true);\n  }\n  Arm.spin(forward);\n  wait(0.3, seconds);\n  Arm.stop();\n  Arm.setPosition(0.0, degrees);\n}\n\n// \"when Controller ButtonRDown pressed\" hat block\nvoid onevent_ControllerButtonRDown_pressed_0() {\n  Arm.spin(reverse);\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  // register event handlers\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n  Controller.ButtonLDown.pressed(onevent_ControllerButtonLDown_pressed_0);\n  Controller.ButtonRUp.released(onevent_ControllerButtonRUp_released_0);\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n  Controller.ButtonRDown.released(onevent_ControllerButtonRDown_released_0);\n  Controller.ButtonRUp.pressed(onevent_ControllerButtonRUp_pressed_0);\n  Controller.ButtonFUp.pressed(onevent_ControllerButtonFUp_pressed_0);\n  Controller.ButtonRDown.pressed(onevent_ControllerButtonRDown_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}